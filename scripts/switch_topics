#!/usr/bin/env python3

import argparse
import os

import rosbag
from colorama import Fore, Style
from pytictoc import TicToc
from tqdm import tqdm

"""
This script allows you to switch pairs of topics in a ROS bag file.

Usage:

./switch_topics -bfi original.bag -ts topic1 topic2 topic3 topic4

"""

if __name__ == "__main__":
    # Parse command line arguments
    ap = argparse.ArgumentParser()
    ap.add_argument("-bfi", "--bagfile_in", help='Full path to the bagfile', type=str, required=True)
    ap.add_argument("-bfo", "--bagfile_out", help='Full path to output the bagfile. If not given will be named out.bag and placed on the same folder as the input bag.', type=str, required=False)
    ap.add_argument("-ts", "--topic_switch_pairs", help='Pairs of topics to switch in the bagfile. Example: ... -s topic1 topic2 topic3 topic4. topic1 will switch with topic2 and topic3 will switch with topic4', type=str, required=True, nargs='+')

    args = vars(ap.parse_args())

    # --------------------------------------------------------------------------
    # Process the arguments
    if len(args['topic_switch_pairs']) % 2 != 0:
        print('Error: The number of topics to switch must be even.')
        exit(1)

    # Dividing the list of topics to remove and add
    args['switch_element_1'] = args['topic_switch_pairs'][::2]
    args['switch_element_2'] = args['topic_switch_pairs'][1::2]
    
    if args['bagfile_out'] is None:
        path = os.path.dirname(args['bagfile_in'])
        args['bagfile_out'] = path + '/out.bag'
        
    print('Producing a new bag ' + Fore.BLUE + args['bagfile_out'] + Style.RESET_ALL)

    # Print the topic pairs that will switch
    print('Topic pairs to switch:')
    for i in range(0, len(args['switch_element_1'])):
        print(args['switch_element_1'][i] + ' will switch with ' + args['switch_element_2'][i])

    # Read the bag input file
    bag_file = args['bagfile_in']
    print('Loading bagfile ' + bag_file)
    bag = rosbag.Bag(bag_file) # load the bag file
    bag_info = bag.get_type_and_topic_info()
    bag_types = bag_info[0]
    bag_topics = bag_info[1]
    
    # --------------------------------------------------------------------------
    # Initial setup
    # --------------------------------------------------------------------------
    tictoc = TicToc()
    tictoc.tic()
    bag_out = rosbag.Bag(args['bagfile_out'], 'w')
    
    # --------------------------------------------------------------------------
    # Writing new bagfile
    # --------------------------------------------------------------------------
    print('Converting bagfile. Please wait...')
    for topic, msg, stamp, connection_header in tqdm(bag.read_messages(return_connection_header=True), total=bag.get_message_count(), desc='Processing bag messages'):
        
        for (element_1, element_2) in zip(args['switch_element_1'], args['switch_element_2']):
            if topic == element_1:
                topic = element_2
            elif topic == element_2:
                topic = element_1
        bag_out.write(topic, msg, stamp, connection_header=connection_header)
    
    bag.close() # close the bag file.
    bag_out.close() # close the bag file.
    
    print('Finished in ' + str(round(tictoc.tocvalue(),2)) + ' seconds.')
    
    